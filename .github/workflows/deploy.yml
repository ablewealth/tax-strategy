name: Deploy static content to Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags. This is often necessary for tools that inspect Git history.
          # The default depth is 1, which can cause issues in some build scenarios.
          fetch-depth: 0 
          # Ensure the GITHUB_TOKEN is used for authentication, which has the necessary permissions.
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm' # This will now correctly look for package-lock.json in the root
          
      - name: Install frontend dependencies and build
        # No 'working-directory' is needed here because your frontend project (with its package.json) is in the root.
        run: |
          echo "Installing frontend dependencies..."
          # npm ci requires a package-lock.json file to be present in the current directory.
          # Make sure you have committed your package-lock.json to your repository's root.
          npm ci 
          echo "✅ Frontend dependencies installed successfully"
          
          echo "Building frontend application..."
          npm run build
          echo "✅ Frontend build completed successfully"
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          CI: false # Important for Create React App builds to prevent warnings from being treated as errors
          
      # The rest of your workflow steps for frontend build and deployment would follow here.
      # You would likely need a separate step or job to build your frontend if it's in a different directory.
      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -la ./build
          echo ""
          echo "Checking for required files:"
          if [ -f "./build/index.html" ]; then
            echo "✅ index.html found"
          else
            echo "❌ index.html missing"
            exit 1
          fi
          
          if [ -d "./build/static" ]; then
            echo "✅ static directory found"
            echo "Static files:"
            ls -la ./build/static/
          else
            echo "⚠️ No static directory found"
          fi
          
          echo ""
          echo "Build size:"
          du -sh ./build
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build' # This path is correct for a Create React App build in the root

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4