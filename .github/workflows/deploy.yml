name: Deploy static content to Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags. This is often necessary for tools that inspect Git history.
          # The default depth is 1, which can cause issues in some build scenarios.
          fetch-depth: 0 
          # Ensure the GITHUB_TOKEN is used for authentication, which has the necessary permissions.
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Verify package.json
        run: |
          echo "Checking package.json..."
          cat package.json | head -20
          
      - name: Clean npm cache
        run: npm cache clean --force
        
      - name: Remove existing lock file if corrupted
        run: |
          if [ -f "package-lock.json" ]; then
            echo "Checking package-lock.json format..."
            if grep -q "npm install" package-lock.json; then
              echo "⚠️ Corrupted package-lock.json detected, removing..."
              rm package-lock.json
            fi
          fi
        
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install
          echo "✅ Dependencies installed successfully"
        env:
          CI: false
          NODE_OPTIONS: "--max-old-space-size=4096"
          
      - name: Build application
        run: |
          echo "Building application..."
          npm run build
          echo "✅ Build completed successfully"
        env:
          CI: false
          NODE_OPTIONS: "--max-old-space-size=4096"
          
      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -la ./build
          echo ""
          echo "Checking for required files:"
          if [ -f "./build/index.html" ]; then
            echo "✅ index.html found"
          else
            echo "❌ index.html missing"
            exit 1
          fi
          
          if [ -d "./build/static" ]; then
            echo "✅ static directory found"
            echo "Static files:"
            ls -la ./build/static/
          else
            echo "⚠️ No static directory found"
          fi
          
          echo ""
          echo "Build size:"
          du -sh ./build
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4